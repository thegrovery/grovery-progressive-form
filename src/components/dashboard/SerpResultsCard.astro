---
// SERP Results Card Component
const { serpData = {} } = Astro.props;

// Extract data from SERP results
const organicResults = serpData.organic_results || [];
const knowledgeGraph = serpData.knowledge_graph || null;
const relatedSearches = serpData.related_searches || [];
const peopleAlsoAsk = serpData.related_questions || [];
const featuredSnippet = serpData.answer_box || null;
const localResults = serpData.local_results || [];

// Calculate metrics
const hasTopPosition = organicResults.length > 0 && organicResults[0].position <= 3;
const hasFeaturedSnippet = !!featuredSnippet;
const hasKnowledgePanel = !!knowledgeGraph;
const hasLocalPack = localResults.length > 0;

// Get total results - check both locations where it might be stored
const totalResults = serpData.search_information?.total_results || 
                    serpData.search_metadata?.total_results || 
                    organicResults.length || 0;

// Format total results
function formatNumber(num: number | undefined | null): string {
  if (!num) return '0';
  if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
  if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
  return num.toString();
}

// For debugging
console.log("SERP Data:", {
  organicResultsCount: organicResults.length,
  totalResults: totalResults,
  searchInfo: serpData.search_information,
  searchMetadata: serpData.search_metadata,
  organicResults: organicResults
});
---

<div class="bg-white p-6 rounded-xl ring-1 ring-gray-200">
  <h2 class="text-xl font-semibold mb-4">Search Results</h2>
  
  <!-- Search Metrics -->
  <div class="grid grid-cols-2 gap-4 mb-6">
    <div class="bg-gray-50 p-4 rounded-lg">
      <p class="text-sm text-gray-500">Total Results</p>
      <p class="text-2xl font-bold">{formatNumber(totalResults || organicResults.length)}</p>
    </div>
    
    <div class="bg-gray-50 p-4 rounded-lg">
      <p class="text-sm text-gray-500">Top Position</p>
      <p class="text-2xl font-bold">
        {organicResults.length > 0 
          ? `#${organicResults[0].position || 'N/A'}` 
          : 'Not Ranked'}
      </p>
    </div>
  </div>
  
  <!-- SERP Features -->
  <div class="mb-6">
    <h3 class="text-sm font-medium text-gray-700 mb-3">SERP Features</h3>
    <div class="grid grid-cols-2 gap-3">
      <div class={`p-3 rounded-lg border ${hasFeaturedSnippet ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
        <div class="flex items-center">
          <div class={`w-8 h-8 rounded-full flex items-center justify-center mr-2 ${hasFeaturedSnippet ? 'bg-green-100 text-green-600' : 'bg-gray-200 text-gray-400'}`}>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
            </svg>
          </div>
          <span>Featured Snippet</span>
        </div>
      </div>
      
      <div class={`p-3 rounded-lg border ${hasKnowledgePanel ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
        <div class="flex items-center">
          <div class={`w-8 h-8 rounded-full flex items-center justify-center mr-2 ${hasKnowledgePanel ? 'bg-green-100 text-green-600' : 'bg-gray-200 text-gray-400'}`}>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z" />
            </svg>
          </div>
          <span>Knowledge Panel</span>
        </div>
      </div>
      
      <div class={`p-3 rounded-lg border ${hasLocalPack ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
        <div class="flex items-center">
          <div class={`w-8 h-8 rounded-full flex items-center justify-center mr-2 ${hasLocalPack ? 'bg-green-100 text-green-600' : 'bg-gray-200 text-gray-400'}`}>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
            </svg>
          </div>
          <span>Local Pack</span>
        </div>
      </div>
      
      <div class={`p-3 rounded-lg border ${hasTopPosition ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
        <div class="flex items-center">
          <div class={`w-8 h-8 rounded-full flex items-center justify-center mr-2 ${hasTopPosition ? 'bg-green-100 text-green-600' : 'bg-gray-200 text-gray-400'}`}>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </div>
          <span>Top 3 Position</span>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Top Organic Results -->
  {organicResults.length > 0 && (
    <div>
      <h3 class="text-sm font-medium text-gray-700 mb-3">Top Organic Results</h3>
      <div class="space-y-4">
        {organicResults.slice(0, 5).map((result: any, index: number) => (
          <div class="bg-gray-50 p-4 rounded-lg">
            <div class="flex items-start">
              <div class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full mr-2">
                #{index + 1}
              </div>
              <div>
                <h4 class="text-sm font-medium">{result.title}</h4>
                <a href={result.link} class="text-xs text-green-700 mb-1 block truncate">{result.link || result.displayed_link}</a>
                <p class="text-xs text-gray-600">{result.snippet}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )}
  
  <!-- Related Searches -->
  {relatedSearches.length > 0 && (
    <div class="mt-6">
      <h3 class="text-sm font-medium text-gray-700 mb-3">Related Searches</h3>
      <div class="flex flex-wrap gap-2">
        {relatedSearches.slice(0, 8).map((search: any) => (
          <span class="bg-gray-100 text-gray-800 text-xs font-medium px-2.5 py-1.5 rounded">
            {search.query}
          </span>
        ))}
      </div>
    </div>
  )}
</div>