---
// Google Trends Chart Component
const { data = { interest_over_time: { timeline_data: [], averages: [] } }, brandName = '' } = Astro.props;

// Format data for Chart.js
const timelineData = data.interest_over_time?.timeline_data || [];
const labels = timelineData.map(point => point.date);
const values = timelineData.map(point => {
  if (point.values && point.values.length > 0) {
    return point.values[0].extracted_value || 0;
  }
  return 0;
});

// Get average interest value if available
let averageInterest = 0;
if (data.interest_over_time?.averages && data.interest_over_time.averages.length > 0) {
  averageInterest = data.interest_over_time.averages[0].value || 0;
}

// Generate unique ID for this chart
const chartId = 'trends-chart-' + Math.random().toString(36).substring(2, 9);
---

<div>
  {timelineData.length > 0 ? (
    <div>
      <div class="flex justify-between items-center mb-4">
        <div>
          <p class="text-sm text-gray-500">Average Interest</p>
          <p class="text-2xl font-bold">{averageInterest}/100</p>
        </div>
        <div class="text-sm text-gray-500">
          Data from Google Trends, past 12 months
        </div>
      </div>
      
      <div class="h-64">
        <canvas id={chartId} data-labels={JSON.stringify(labels)} data-values={JSON.stringify(values)} data-brand={brandName}></canvas>
      </div>
    </div>
  ) : (
    <div class="text-center py-12 text-gray-500">
      <p>No trend data available for "{brandName}"</p>
      <p class="text-sm mt-2">Try a different brand name or check back later</p>
    </div>
  )}
</div>

<script>
  // Client-side script to initialize the chart using Chart.js
  import Chart from 'chart.js/auto';
  
  document.addEventListener('DOMContentLoaded', () => {
    // Find all trend charts on the page
    document.querySelectorAll('canvas[id^="trends-chart-"]').forEach(canvas => {
      const ctx = canvas.getContext('2d');
      const labels = JSON.parse(canvas.dataset.labels || '[]');
      const values = JSON.parse(canvas.dataset.values || '[]');
      const brandName = canvas.dataset.brand || '';
      
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: `Interest in "${brandName}"`,
            data: values,
            borderColor: 'rgb(59, 130, 246)',
            backgroundColor: 'rgba(59, 130, 246, 0.1)',
            tension: 0.3,
            fill: true
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              max: 100,
              title: {
                display: true,
                text: 'Search Interest'
              }
            },
            x: {
              grid: {
                display: false
              }
            }
          },
          plugins: {
            tooltip: {
              mode: 'index',
              intersect: false
            },
            legend: {
              display: true,
              position: 'top'
            }
          }
        }
      });
    });
  });
</script> 